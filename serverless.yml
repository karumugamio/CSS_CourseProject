# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml
service: ${self:provider.stackTags.Team}-${self:provider.stackTags.Product}-${self:provider.stackTags.Customer}
  
provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-south-1'}
  stackTags:
    Customer: CSSCourseProject
    Platform: AWS
    Product: ElectionCandidateProfile
    Stage: ${self:provider.stage}
    Team: team9
  environment:
    NODE_ENV: ${opt:stage, self:provider.stage}
    REGION: ${opt:region, self:provider.region}
    APP_ID: ${self:provider.stackTags.Product}_${self:provider.stackTags.Customer}_ingestion_layer_${self:provider.region}_${self:provider.stage}
  tracing:
    apiGateway: true
    lambda: true
  versionFunctions: false
  iam:
    role:
      name: ${self:provider.stackTags.Customer}_Ingestion_Role_${self:provider.region}_${self:provider.stage}
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - lambda:InvokeFunction
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeTable
            - dynamodb:CreateTable
            - dynamodb:DeleteTable
            - dynamodb:UpdateItem
            - dynamodb:UpdateTable
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - secretsmanager:GetSecretValue
            - s3:GetObject
            - s3:ListBucket
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
            - ses:SendEmail
            - sqs:GetQueueAttributes
            - sqs:GetQueueUrl
            - sqs:ListQueueTags
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:SendMessage
            - sqs:SendMessageBatch
            - sqs:SetQueueAttributes
          Resource: "*"
  deploymentBucket:
    name: deployments-${aws:accountId}-${self:provider.region}
    blockPublicAccess: true

resources:
  Description: This is ${self:provider.stackTags.Team}'s ${self:provider.stackTags.Product} deployment for ${self:provider.stackTags.Customer} in ${self:provider.stage} stage. Please contact PSA3S@genesys.com for more details
  Resources:
    ConfigTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.stackTags.Product}_${self:provider.stackTags.Customer}_Ingestion_configuration_${self:provider.region}_${self:provider.stage}
        ProvisionedThroughput:
              ReadCapacityUnits: 30
              WriteCapacityUnits: 30
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
        Tags:
          - 
            Key: 'AWSDailyDynamoDbBackup'
            Value: 'true'
package:
  individually: false
  patterns:
    - "src/**"
    - "!node_modules/aws-sdk/**"
    - "!resources/**"
    - "src/common/**"



functions:
  searchCandidate:
      name: ElectionCandidateProfileRestAPI
      description: Function that is called from API Gateway serach candidate.
      timeout: 15 # elastic search configuration can take some time
      handler: src/restapi/getcandidates.handler
      package:
        patterns:
          - src/restapi/getcandidates.js
      events:
        - http:
            path: searchCandidate
            method: post
            cors:
              origin: "*"
              headers:
                - env
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Amz-Security-Token
                - X-Amz-User-Agent
              allowCredentials: false        